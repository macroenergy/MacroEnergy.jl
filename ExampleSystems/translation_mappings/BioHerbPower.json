{
    "BioHerbPower": [
        {
            "type": "ThermalPower - these are the herb biomass to electricity generation, which correspond to those resources that burn herb biomass and do not have CCS ",
            "global_data": {
                "nodes": {},
              "transforms": {
                "timedata": "Electricity",
                "efficiency_rate": "<BESC_Biorefinery/BioElectricity_yield_MWh_per_tonne> ### this is more than 1 bcoz its not really an efficiency (percentage) as it has units (MWh/tonne) ",
                "emission_rate": "<BESC_Biorefinery/CO2_emissions_tonne_per_tonne>", 
                "constraints": {
                  "BalanceConstraint": true
                }
              },
                "edges": {
                    "elec_edge": {
                        "type": "Electricity",
                         "unidirectional": true,
                         "has_capacity": false
                        },
                    "fuel_edge": {
                        "type": "BioHerb",
                        "uc": false,
                        "unidirectional": true,
                        "has_capacity": true,
                        "existing_capacity":0,
                        "capacity_size":1 ,
                        "investment_cost": "<BESC_Biorefinery/Inv_Cost_per_tonne_per_hr_yr>",
                        "fixed_om_cost": "<BESC_Biorefinery/Fixed_OM_Cost_per_tonne_per_hr_yr>",
                        "variable_om_cost":"<BESC_Biorefinery/Var_OM_per_tonne>",
                        "can_expand": "true",
                        "can_retire": "true",
                        "min_flow_fraction": "<BESC_Biorefinery/Biomass_min_consumption>",
                        "max_capacity":"<BESC_Biorefinery/Max_capacity_tonne_per_hr> #### NOTE: IF THIS IS NOTZERO, THEN MAXIMUM CAPACITY CONSTRAINT HAS TO BE ADDED IN THE CONSTRAINTS LIST BELOW",
                        "min_capacity": "<BESC_Biorefinery/Min_capacity_tonne_per_hr> #### NOTE: IF THIS IS NOTZERO, THEN MINIMUM CAPACITY CONSTRAINT HAS TO BE ADDED IN THE CONSTRAINTS LIST BELOW",
                        "constraints`": {
                            "CapacityConstraint": true,
                            "MinFlowConstraint": true
                        }
                    },
                    "co2_edge": {
                        "type": "CO2",
                        "unidirectional": true,
                        "has_capacity": false
                    }
                },
                "storage": {}
            },
            "instance_data": [
                {
                    "id": "BioHerbPower_MA",
                    "nodes": {},
                    "transforms": {},
                    "edges": {
                        "elec_edge": {
                            "end_vertex": "elec_MA"
                        },
                        "fuel_edge": {
                            "start_vertex": "bioherb_MA"
                        },
                        "co2_edge": {
                            "end_vertex": "co2_MA"
                        }
                    },
                    "storage": {}
                },
                {
                    "id": "BioHerbPower_CT",
                    "nodes": {},
                    "transforms": {},
                    "edges": {
                        "elec_edge": {
                            "end_vertex": "elec_CT"
                        },
                        "fuel_edge": {
                            "start_vertex": "bioherb_CT"
                        },
                        "co2_edge": {
                            "end_vertex": "co2_CT"
                        }
                    },
                    "storage": {}
                },
                {
                    "id": "BioHerbPower_ME",
                    "nodes": {},
                    "transforms": {},
                    "edges": {
                        "elec_edge": {
                            "end_vertex": "elec_ME"
                        },
                        "fuel_edge": {
                            "start_vertex": "bioherb_ME"
                        },
                        "co2_edge": {
                            "end_vertex": "co2_ME"
                        }
                    },
                    "storage": {}
                }
            ]
        }
    ]
}